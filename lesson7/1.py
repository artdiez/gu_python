# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
import numpy as np

class Matrix:
    def __init__(self, matrix):
        self.matrix = np.array(matrix)

    def __str__(self):
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in self.matrix]))

    def __add__(self, other):
        try:
            return Matrix(self.matrix + other.matrix)
        except ValueError:
            return 'Разные размеры матриц!'


matrix = Matrix([[1, 2, 3], [3, 2, 1], [4, 5, 7]])
matrix2 = Matrix([[1, 2, 3], [3, 2, 1], [4, 5, 7]])
print(matrix)
print('----')
print(matrix + matrix2)

matrix3 = Matrix([[1, 2, 3], [3, 2, 1], [4, 5, 7]])
matrix4 = Matrix([[1, 2, 3], [4, 5, 7]])
print(matrix3 + matrix4)